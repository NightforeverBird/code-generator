#set ( $sys = ${system} )
#set ( $dp = ${dynamicPath} )
#set ( $tpl = ${template} )
#set ( $package = ${sys.config.get("generator.package")} )
#set ( $className = ${dp.className} )
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${package}.dao.${className}Dao">

    #set ( $sort = "" )
    #set ( $order = "" )
    <resultMap id="BaseResultMap" type="${package}.model.${className}">
#foreach($column in $table.columns) <result column="$column.columnName" property="$column.attributeName" />
#end
    </resultMap>
    <sql id="Table_Name"> "$table.tableName" </sql>
    <sql id="Set_Primary_Key">#foreach($column in $table.columns)#if($column.isPk==true)"$column.columnName" = #{$column.attributeName}#end#end</sql>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List"><trim suffixOverrides=",">#foreach($column in $table.columns)"$column.columnName",#end</trim></sql>

    <select id="selectByExample" parameterType="${package}.model.${className}Example" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from <include refid="Table_Name" />
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from <include refid="Table_Name" />
        where <include refid="Set_Primary_Key"/>
    </select>

    <delete id="deleteByPrimaryKey">
        delete from <include refid="Table_Name" />
        where <include refid="Set_Primary_Key"/>
    </delete>

    <delete id="deleteByExample" parameterType="${package}.model.${className}Example">
        delete from <include refid="Table_Name" />
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="${package}.model.${className}">
        insert into <include refid="Table_Name" /> (
        <trim suffixOverrides=",">
        #foreach($column in $table.columns)
        "$column.columnName",
        #end </trim>)
        values (
        <trim suffixOverrides=",">
        #foreach($column in $table.columns)
        #{$column.attributeName},
        #end </trim>)
    </insert>

    <insert id="insertSelective" parameterType="${package}.model.${className}">
        insert into <include refid="Table_Name" /> (
        <trim suffixOverrides=",">
        #foreach($column in $table.columns)
        <if test="$column.attributeName != null">"$column.columnName",</if>
        #end </trim>)
        values (
        <trim suffixOverrides=",">
        #foreach($column in $table.columns)
            <if test="$column.attributeName != null">#{$column.attributeName},</if>
        #end </trim>)
    </insert>

    <select id="countByExample" parameterType="${package}.model.${className}Example" resultType="java.lang.Long">
        select count(*) from <include refid="Table_Name" />
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update <include refid="Table_Name" />
        <set>
            #foreach($column in $table.columns)
                <if test="$column.attributeName != null">"$column.columnName" = #{$column.attributeName},</if>
            #end
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map">
        update <include refid="Table_Name" />
        <set>
            #foreach($column in $table.columns)
                "$column.columnName" = #{$column.attributeName},
            #end
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="${package}.model.${className}">
        update <include refid="Table_Name" />
        <set>
            #foreach($column in $table.columns)
                <if test="$column.attributeName != null">"$column.columnName" = #{$column.attributeName},</if>
            #end
        </set>
        where <include refid="Set_Primary_Key"/>
    </update>

    <update id="updateByPrimaryKey" parameterType="${package}.model.${className}">
        update <include refid="Table_Name" />
        <set>
            #foreach($column in $table.columns)
                "$column.columnName" = #{$column.attributeName},
            #end
        </set>
        where <include refid="Set_Primary_Key"/>
    </update>
</mapper>